AWSTemplateFormatVersion: 2010-09-09
Description: Photo Album APIGateway
Resources:
  APIGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: AI Photo Search application, built during the Cloud and Big Data course at Columbia University.
      EndpointConfiguration:
        Types:
          - REGIONAL
      Name: AI Photo CF TEST
      BinaryMediaTypes:
        - "image/jpeg"
      Body: 
        swagger: "2.0"
        info:
          description: "AI Photo Search application, built during the Cloud and Big Data course\
            \ at Columbia University."
          version: "1.0.0"
          title: "AI Photo Search"
        paths:
          /search:
            get:
              parameters:
              - name: "q"
                in: "query"
                required: true
                type: "string"
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
            options:
              consumes:
              - "application/json"
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                    Access-Control-Allow-Methods:
                      type: "string"
                    Access-Control-Allow-Headers:
                      type: "string"
          /upload/{object}:
            put:
              parameters:
              - name: "Content-Type"
                in: "header"
                required: true
                type: "string"
              - name: "object"
                in: "path"
                required: true
                type: "string"
              - name: "x-amz-meta-customLabels"
                in: "header"
                required: false
                type: "string"
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
            options:
              consumes:
              - "application/json"
              parameters:
              - name: "object"
                in: "path"
                required: true
                type: "string"
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                    Access-Control-Allow-Methods:
                      type: "string"
                    Access-Control-Allow-Headers:
                      type: "string"

  LambdaRuntimeRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"

  LambdaSearchPhotosTest:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: code-hongyi
        S3Key: search-photos.zip
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Description: ""
      MemorySize: 128
      Timeout: 10
      Role: !GetAtt LambdaRuntimeRole.Arn

Outputs:
  RootResourceID:
    Description: RootResourceID
    Value: !GetAtt 
      - APIGateway
      - RootResourceId 
