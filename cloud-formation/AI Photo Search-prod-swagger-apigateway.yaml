---
swagger: "2.0"
info:
  description: "AI Photo Search application, built during the Cloud and Big Data course\
    \ at Columbia University."
  version: "1.0.0"
  title: "AI Photo Search"
host: "rwiljxp79a.execute-api.us-east-1.amazonaws.com"
basePath: "/prod"
schemes:
- "https"
paths:
  /search:
    get:
      parameters:
      - name: "q"
        in: "query"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:814655805539:function:assignment2-search-photos/invocations"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    options:
      consumes:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /upload/{object}:
    put:
      parameters:
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
      - name: "object"
        in: "path"
        required: true
        type: "string"
      - name: "x-amz-meta-customLabels"
        in: "header"
        required: false
        type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::814655805539:role/apigateway"
        httpMethod: "PUT"
        uri: "arn:aws:apigateway:us-east-1:s3:path/assignment2-nyu-photos/{object}"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.path.object: "method.request.path.object"
          integration.request.header.x-amz-meta-customLabels: "method.request.header.x-amz-meta-customLabels"
          integration.request.header.Content-Type: "method.request.header.Content-Type"
        passthroughBehavior: "when_no_match"
        cacheNamespace: "0nqx10"
        cacheKeyParameters:
        - "method.request.path.object"
        - "method.request.header.Content-Type"
        - "method.request.header.x-amz-meta-customLabels"
        - "integration.request.path.object"
        - "integration.request.header.x-amz-meta-customLabels"
        - "integration.request.header.Content-Type"
        contentHandling: "CONVERT_TO_BINARY"
        type: "aws"
    options:
      consumes:
      - "application/json"
      parameters:
      - name: "object"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,x-amz-meta-customLabels'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
x-amazon-apigateway-request-validators:
  Validate body, query string parameters, and headers:
    validateRequestParameters: true
    validateRequestBody: true
x-amazon-apigateway-binary-media-types:
- "image/jpeg"
